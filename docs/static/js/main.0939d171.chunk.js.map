{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpert.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized","GifGridItem","className","src","alt","prototype","PropTypes","string","isRequired","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","img","GifExpert","categories","setcategories","index","ReactDOM","render","document","getElementById"],"mappings":"4LAuCeA,EAnCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAoBrC,OACI,sBAAMC,SAbY,SAACC,GAEnBA,EAAEC,iBACFC,QAAQC,IAAI,oBAAqBN,GAE7BA,EAAWO,OAAOC,OAAS,IAC3BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAMlB,SACI,uBAAOS,YAAY,YAAYC,KAAK,OAAOC,MAAOZ,EAAYa,SAnB3C,SAACV,GACxBF,EAAcE,EAAEW,OAAOF,a,+BCRjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGVC,EAHU,0FAGgFC,UAAUH,GAH1F,gDAKGI,MAAMF,GALT,cAKVG,EALU,gBAMKA,EAAKC,OANV,uBAMTC,EANS,EAMTA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MACI,CACIC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QAbvB,kBAiBZM,GAjBY,4CAAH,sD,oBCGRO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QAMjBG,EAAYI,UAAY,CACpBP,MAAOQ,IAAUC,OAAOC,WACxBpB,IAAKkB,IAAUC,OAAOC,YCZnB,IAAMC,EAAU,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SAAe,ECD1B,SAAuBA,GAAW,IAAD,EAClBjB,mBAAS,CAAEwB,KAAM,GAAIiB,SAAS,IADZ,mBACrCC,EADqC,KAC9BC,EAD8B,KAa5C,OAVAC,qBAAU,WACN5B,EAAQC,GAAU4B,MAAK,SAAAC,GAGnBC,YAAW,WACPJ,EAAS,CAAEnB,KAAMsB,EAAML,SAAS,MACjC,UAER,CAACxB,IAEGyB,EDV0BM,CAAa/B,GAAjCa,EAFwB,EAE7BN,KAAaiB,EAFgB,EAEhBA,QAErB,OACI,qCACI,oBAAIR,UAAU,oCAAd,SAAmDhB,IAEjDwB,GAAW,mBAAGR,UAAU,mCAAb,yBAEjB,qBAAKA,UAAU,YAAf,SAEqB,GAAjBH,EAAOrB,OACDqB,EAAOJ,KAAI,SAACuB,GACN,OAAS,cAAC,EAAD,eAA8BA,GAAZA,EAAIrB,QAEpCa,GAAW,gFEQfS,EAxBG,WAAO,IAAD,EAEgBlD,mBAAS,CAAC,gBAF1B,mBAEbmD,EAFa,KAEDC,EAFC,KAKpB,OACI,qCACI,4CACA,cAAC,EAAD,CAAarD,cAAeqD,IAC5B,uBACA,8BACI,6BAEQD,EAAWzB,KAAI,SAACT,EAAUoC,GAAX,OACX,cAAC,EAAD,CAAwBpC,SAAUA,GAApBA,c,MCZ1CqC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0939d171.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setinputValue] = useState('');\n    const _handleInputChange = (e) => {\n        setinputValue(e.target.value);\n\n    }\n    \n    const _handleSubmit = (e) => {\n        \n        e.preventDefault();\n        console.log(\"Submit llamado...\", inputValue);\n        \n        if (inputValue.trim().length > 2) {\n            setCategories(cats => [inputValue, ...cats]);\n            setinputValue('');\n        }\n        \n        \n    }\n    return (\n        <form onSubmit={_handleSubmit}>\n            <input placeholder=\"Buscar...\" type=\"text\" value={inputValue} onChange={_handleInputChange} />\n        </ form>\n    );\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\n\n\nexport default AddCategory;\n"," export const getGifs = async (category) => {\n        \n        \n        const url = `https://api.giphy.com/v1/gifs/search?api_key=PmYoyrNJUlptKppYJNhajYVh7S70R2xk&q=${ encodeURI(category) }&limit=10&offset=0&rating=g&lang=es`;\n\n        const resp = await fetch(url);\n        const {data} = await resp.json();\n        \n        const gifs = data.map((gif) => {\n            return (\n                {\n                    id: gif.id,\n                    title: gif.title,\n                    url: gif.images?.downsized.url\n                }\n            )\n        });\n     return gifs;\n    }\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport const GifGridItem = ({id, title, url}) => {\n    \n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\n\nGifGridItem.prototype = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n}\n","import React from 'react';\nimport useFetchGifs from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n    \n    const { data:images, loading } = useFetchGifs(category);\n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            \n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\n            \n        <div className=\"card-grid\">\n            { \n            images.length != 0\n                ? images.map((img) => {\n                        return ( <GifGridItem key={img.id} {...img} /> )\n                    })\n                : !loading && <p>No se encontraron gifs con este t√≠tulo</p>\n           }\n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport default function useFetchGifs (category) {\n    const [state, setstate] = useState({ data: [], loading: true });\n    \n    useEffect(() => {\n        getGifs(category).then(imgs => {\n            \n            \n            setTimeout(() => {\n                setstate({ data: imgs, loading: false });\n            }, 1000);\n        })\n    }, [category]);\n    \n    return state;\n}\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpert = () => {\n    \n    const [categories, setcategories] = useState([\"Dragon Ball\"]);\n    \n    \n    return (\n        <>\n            <h2>Gif Expert</h2>\n            <AddCategory setCategories={setcategories} />\n            <hr />\n            <div>\n                <ol>\n                    {\n                        categories.map((category, index) => (\n                            <GifGrid key={category} category={category} />\n                         ) )\n                    }\n                </ol>\n            </div>\n        </>\n    )\n}\n\n\nexport default GifExpert;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpert from './GifExpert';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpert />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}